{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants.js';\nconst initialStateSearch = {\n  searchField: ''\n};\nexport const searchRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n    // return { ...state, searchField: action.payload};  // object destructuring\n\n    default:\n      return state;\n    // returning a new state with an empty object sign, with the previous state, \n    // that has new payload\n  }\n};\nconst intialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const requestRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/yijinlee/Documents/The-Complete-Web-Developer/Redux/robotfriends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","initialState","action","type","Object","assign","payload","intialStateRobots","isPending","robots","error","requestRobots"],"mappings":"AAAA,SACCA,mBADD,EAECC,sBAFD,EAGCC,sBAHD,EAICC,qBAJD,QAKO,gBALP;AAOA,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,WAAW,EAAE;AADa,CAA3B;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACC,YAAP,EAAqBC,MAAM,GAAC,EAA5B,KAAmC;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKV,mBAAL;AACC,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEF,QAAAA,WAAW,EAAEI,MAAM,CAACI;AAAtB,OAAzB,CAAP;AACA;;AACD;AACC,aAAON,KAAP;AAEF;AACA;AARA;AAUA,CAXM;AAcP,MAAMO,iBAAiB,GAAG;AACzBC,EAAAA,SAAS,EAAE,KADc;AAEzBC,EAAAA,MAAM,EAAE,EAFiB;AAGzBC,EAAAA,KAAK,EAAE;AAHkB,CAA1B;AAMA,OAAO,MAAMC,aAAa,GAAG,CAACX,KAAK,GAACC,YAAP,EAAqBC,MAAM,GAAC,EAA5B,KAAmC;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKT,sBAAL;AACC,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACD,SAAKb,sBAAL;AACC,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAES,QAAAA,MAAM,EAAEP,MAAM,CAACI,OAAjB;AAA0BE,QAAAA,SAAS,EAAE;AAArC,OAAzB,CAAP;;AACD,SAAKZ,qBAAL;AACC,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEU,QAAAA,KAAK,EAAER,MAAM,CAACI,OAAhB;AAAyBE,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACD;AACC,aAAOR,KAAP;AARF;AAUA,CAXK","sourcesContent":["import { \n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_FAILED\n} from './constants.js'\n\nconst initialStateSearch = {\n\tsearchField: ''\n}\n\nexport const searchRobots = (state=initialState, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\n\t\t\t// return { ...state, searchField: action.payload};  // object destructuring\n\t\tdefault:\n\t\t\treturn state;\n\n\t// returning a new state with an empty object sign, with the previous state, \n\t// that has new payload\n\t}\n}\n\n\nconst intialStateRobots = {\n\tisPending: false,\n\trobots: [],\n\terror: ''\n}\n\nexport const requestRobots = (state=initialState, action={}) => {\n \tswitch(action.type) {\n \t\tcase REQUEST_ROBOTS_PENDING:\n \t\t\treturn Object.assign({}, state, { isPending: true })\n \t\tcase REQUEST_ROBOTS_SUCCESS:\n \t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false })\n \t\tcase REQUEST_ROBOTS_FAILED:\n \t\t\treturn Object.assign({}, state, { error: action.payload, isPending: false })\n \t\tdefault:\n \t\t\treturn state;\n \t}\n }"]},"metadata":{},"sourceType":"module"}