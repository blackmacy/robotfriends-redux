{"ast":null,"code":"var _jsxFileName = \"/Users/yijinlee/Documents/The-Complete-Web-Developer/Redux/robotfriends/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; //will automatically know is javascript file even though there's no '.js'\n\nimport 'tachyons';\nimport App from './containers/App';\nimport { searchRobots, requestRobots, combinedReducers } from './reducers';\nconst logger = createLogger();\nconst rootReducer = combinedReducers({\n  searchRobots,\n  requestRobots\n});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), \",\"), document.getElementById('root')); // Use Provider to pass down the store in reducers, so that we don't have\n// to pass down the component tree over and over again\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/yijinlee/Documents/The-Complete-Web-Developer/Redux/robotfriends/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","createLogger","thunkMiddleware","serviceWorker","App","searchRobots","requestRobots","combinedReducers","logger","rootReducer","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAAkD;;AAClD,OAAO,UAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,gBAAtC,QAA8D,YAA9D;AAEA,MAAMC,MAAM,GAAGP,YAAY,EAA3B;AAEA,MAAMQ,WAAW,GAAGF,gBAAgB,CAAC;AAAEF,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,CAApC;AACA,MAAMI,KAAK,GAAGX,WAAW,CAACU,WAAD,EAAcT,eAAe,CAACE,eAAD,EAAkBM,MAAlB,CAA7B,CAAzB;AAEAX,QAAQ,CAACc,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,MADJ,EAIIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ,E,CAKA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; //will automatically know is javascript file even though there's no '.js'\nimport 'tachyons';\nimport App from './containers/App';\nimport { searchRobots, requestRobots, combinedReducers } from './reducers';\n\nconst logger = createLogger();\n\nconst rootReducer = combinedReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<App />, \n\t\t\t\t</Provider>,\n\t\t\t\tdocument.getElementById('root'));\n// Use Provider to pass down the store in reducers, so that we don't have\n// to pass down the component tree over and over again\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}