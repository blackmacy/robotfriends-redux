{"ast":null,"code":"var _jsxFileName = \"/Users/yijinlee/Documents/The-Complete-Web-Developer/Redux/robotfriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchfield\n  };\n}; // dispatch: to sense the action\n\n\nconst mapDispatchToProps = dispatch => {\n  onSearchChange: event => dispatch(setSearchField, event.target.value);\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          robots = _this$state.robots,\n          searchfield = _this$state.searchfield;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Loading\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Robotfriends\"), React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // subscribe to any state changes in redux store","map":{"version":3,"sources":["/Users/yijinlee/Documents/The-Complete-Web-Developer/Redux/robotfriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","searchRobots","searchfield","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","setState","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBC;AAD1B,GAAP;AAGA,CAJD,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxCC,EAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACP,cAAD,EAAiBS,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAnB;AAChB,CAFD;;AAKA,MAAMC,GAAN,SAAkBlB,SAAlB,CAA4B;AAC3BmB,EAAAA,WAAW,GAAG;AACb;;AADa,SAedL,cAfc,GAeIC,KAAD,IAAW;AAC3B,WAAKK,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEI,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd;AACA,KAjBa;;AAEb,SAAKT,KAAL,GAAa;AACZa,MAAAA,MAAM,EAAE,EADI;AAEZV,MAAAA,WAAW,EAAE;AAFD,KAAb;AAIA;;AAGDW,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADlB,EAEEF,IAFF,CAEOG,KAAK,IAAI,KAAKP,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAEM;AAAV,KAAd,CAFhB;AAGA;;AAMDC,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKpB,KAD7B;AAAA,UACAa,MADA,eACAA,MADA;AAAA,UACQV,WADR,eACQA,WADR;AAER,UAAMkB,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAcC,KAAK,IAAI;AAC7C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCvB,WAAW,CAACsB,WAAZ,EAAlC,CAAP;AACA,KAFsB,CAAvB;AAIA,WAAO,CAACZ,MAAM,CAACc,MAAR,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,GAGN;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAHD,CAHD;AAaA;;AAvC0B;;AA0C5B,eAAe5B,OAAO,CAACM,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf,C,CACA","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css';\n\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchfield\n\t}\n}\n\n// dispatch: to sense the action\nconst mapDispatchToProps = (dispatch) => {\n\tonSearchChange: (event) => dispatch(setSearchField, event.target.value)\n}\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()  \n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=> response.json())\n\t\t\t.then(users => this.setState({ robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value }) \n\t}\n\n\trender() {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\n\t\treturn !robots.length ?\n\t\t\t<h1> Loading</h1>:\n\t\t\t(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'> Robotfriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// subscribe to any state changes in redux store\n\n"]},"metadata":{},"sourceType":"module"}